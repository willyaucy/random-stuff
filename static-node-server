#!/usr/bin/env node

const {createReadStream} = require('fs');
const {createServer} = require('http');
const {existsSync} = require('fs');
const {resolve} = require('path');

if (['--help', '-h'].includes(process.argv[process.argv.length - 1])) {
  console.log([
    'Usage: ./static-node-server',
    'Base path and port can be customized with environment variables',
    'Example: BASE_PATH=~/someFolder PORT=9000 ./static-node-server'
  ].join('\n'));

  process.exit(0);
}

const basePath = resolve((process.env.BASE_PATH || __dirname).replace(/(.*)\/?$/, '$1'));
const port = process.env.PORT || 8080;

createServer(async (req, res) => {
  const indexPath = 'index.html';
  const uriComponent =
      req.url === '/' && existsSync(indexPath)
          ? indexPath
          : decodeURIComponent(req.url).normalize();
  const filePath = resolve(`${basePath}/${uriComponent}`);
  const readStream = createReadStream(filePath);

  readStream.on('close', () => {
    console.log(`${req.method} ${uriComponent} ${res.statusCode}`);
  });

  readStream.on('error', err => {
    switch (err.code) {
      case 'ENOENT':
        res.statusCode = 404;
        break;
      case 'EISDIR':
      case 'ENOTDIR':
        res.statusCode = 400;
        break;
      default:
        console.error(err);
        res.statusCode = 500;
    }

    res.end(JSON.stringify(err));
  });

  readStream.pipe(res);
}).listen(port);

console.log(`Serving content from ${basePath} at port ${port}`);
